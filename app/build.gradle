apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionsName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            resValue("string", "ads_app_id", "ca-app-pub-3940256099942544~3347511713")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-3940256099942544/6300978111")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue("string", "ads_app_id", "ca-app-pub-8679189423397017~6466927509")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-8679189423397017/7417526027")
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude "META-INF/kotlinx-io.kotlin_module"
        exclude "META-INF/atomicfu.kotlin_module"
        exclude "META-INF/kotlinx-coroutines-io.kotlin_module"
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    subprojects {
        configurations {
            ktlint
        }

        dependencies {
            ktlint 'com.github.shyiko:ktlint:0.36.0'
        }

        // 스타일을 검사하는 태스크
        task ktlint(type: JavaExec) {
            main = 'com.github.shyiko.ktlint.Main'
            classpath = configurations.ktlint
            args 'src/**/*.kt'
        }

        // 스타일을 검사하고 맞지 않는 부분을 수정해주는 태스크
        task ktlintFormat(type: JavaExec) {
            main = 'com.github.shyiko.ktlint.Main'
            classpath = configurations.ktlint
            args '-F', 'src/**/*.kt'
        }

        // 'check' 태스크가 실행될 때 'ktlint' 태스크가 함께 수행되도록 합니다.
        afterEvaluate { project ->
            check.dependsOn ktlint
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.anko.values()
    implementation deps.coroutines.values()
    implementation deps.kotlin.values()
    implementation deps.androidx.values()
    implementation deps.retrofit.values()
    implementation deps.rx.values()
    implementation deps.glide.runtime
    kapt deps.glide.compiler
    implementation deps.autodispose.values()
    implementation deps.koin.values()
    implementation deps.timber
    implementation deps.youtube_player
    implementation deps.koap
    implementation deps.lottie
    implementation deps.firebase.values()
    testImplementation deps.tsl.values()
    androidTestImplementation deps.atsl.values()
}

apply plugin: 'com.google.gms.google-services'
